{
  "_comment": "FlowLoom Claude Permissions Template - Installer will customize paths and user will opt-in to destructive operations",
  "permissions": {
    "allow": [
      "_comment_git_read_only": "Safe Git operations - read-only or standard workflow",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git branch:*)",
      "Bash(git remote:*)",
      "Bash(git config --get:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(git push:*)",
      
      "_comment_flowloom_scripts": "FlowLoom internal scripts - paths will be customized by installer",
      "Bash(${FLOWLOOM_PROJECT_PATH}/bin/*:*)",
      "Bash(./bin/*:*)",
      
      "_comment_development_tools": "Common development tools - generally safe",
      "Bash(npm install:*)",
      "Bash(npm run:*)",
      "Bash(npx:*)",
      "Bash(uvx:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip install:*)",
      "Bash(docker build:*)",
      "Bash(docker run:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose down:*)",
      
      "_comment_safe_utilities": "Safe read-only and navigation utilities",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(cat:*)",
      "Bash(less:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(tree:*)",
      "Bash(pwd:*)",
      "Bash(whoami:*)",
      "Bash(date:*)",
      "Bash(echo:*)",
      "Bash(which:*)",
      "Bash(type:*)",
      
      "_comment_mcp_read_operations": "MCP Server read-only operations - generally safe",
      "mcp__memory__read_graph",
      "mcp__memory__search_nodes", 
      "mcp__memory__open_nodes",
      "mcp__filesystem__read_file",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__search_files",
      "mcp__filesystem__get_file_info",
      "mcp__filesystem__list_allowed_directories",
      "mcp__github__search_repositories",
      "mcp__github__get_file_contents",
      "mcp__github__list_commits",
      "mcp__github__list_issues",
      "mcp__github__get_issue",
      "mcp__github__get_pull_request",
      "mcp__github__list_pull_requests",
      "mcp__github__get_pull_request_files",
      "mcp__github__get_pull_request_status",
      "mcp__github__get_pull_request_comments",
      "mcp__github__get_pull_request_reviews",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__sqlite__read_query",
      "mcp__sqlite__list_tables",
      "mcp__sqlite__describe_table",
      "mcp__basic-memory__read_content",
      "mcp__basic-memory__build_context",
      "mcp__basic-memory__recent_activity",
      "mcp__basic-memory__search_notes",
      "mcp__basic-memory__read_note",
      "mcp__basic-memory__project_info",
      "mcp__git__git_status",
      "mcp__git__git_diff_unstaged",
      "mcp__git__git_diff_staged",
      "mcp__git__git_diff",
      "mcp__git__git_log",
      "mcp__git__git_show"
    ],
    "deny": [],
    "_destructive_operations_require_opt_in": {
      "_comment": "These operations require explicit user consent during installation",
      "file_system_destructive": [
        "mcp__filesystem__write_file",
        "mcp__filesystem__edit_file", 
        "mcp__filesystem__create_directory",
        "mcp__filesystem__move_file",
        "Bash(rm:*)",
        "Bash(rmdir:*)",
        "Bash(mv:*)",
        "Bash(cp:*)",
        "Bash(chmod:*)",
        "Bash(chown:*)",
        "Bash(mkdir:*)"
      ],
      "memory_destructive": [
        "mcp__memory__create_entities",
        "mcp__memory__create_relations",
        "mcp__memory__add_observations",
        "mcp__memory__delete_entities",
        "mcp__memory__delete_observations",
        "mcp__memory__delete_relations",
        "mcp__basic-memory__write_note",
        "mcp__basic-memory__delete_note",
        "mcp__basic-memory__canvas"
      ],
      "git_destructive": [
        "mcp__git__git_commit",
        "mcp__git__git_add",
        "mcp__git__git_reset",
        "mcp__git__git_create_branch",
        "mcp__git__git_checkout",
        "Bash(git reset:*)",
        "Bash(git rebase:*)",
        "Bash(git merge:*)",
        "Bash(git tag:*)",
        "Bash(git stash:*)"
      ],
      "github_destructive": [
        "mcp__github__create_or_update_file",
        "mcp__github__create_repository",
        "mcp__github__push_files",
        "mcp__github__create_issue",
        "mcp__github__create_pull_request",
        "mcp__github__fork_repository",
        "mcp__github__create_branch",
        "mcp__github__update_issue",
        "mcp__github__add_issue_comment",
        "mcp__github__create_pull_request_review",
        "mcp__github__merge_pull_request",
        "mcp__github__update_pull_request_branch"
      ],
      "web_automation_destructive": [
        "mcp__puppeteer__puppeteer_click",
        "mcp__puppeteer__puppeteer_fill",
        "mcp__puppeteer__puppeteer_select",
        "mcp__puppeteer__puppeteer_hover",
        "mcp__puppeteer__puppeteer_evaluate"
      ],
      "database_destructive": [
        "mcp__sqlite__write_query",
        "mcp__sqlite__create_table"
      ],
      "system_destructive": [
        "Bash(sudo:*)",
        "Bash(su:*)",
        "Bash(kill:*)",
        "Bash(killall:*)",
        "Bash(docker rm:*)",
        "Bash(docker rmi:*)",
        "Bash(docker system prune:*)",
        "Bash(pip uninstall:*)",
        "Bash(npm uninstall:*)"
      ]
    }
  }
}