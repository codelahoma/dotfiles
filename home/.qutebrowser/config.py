# qutebrowser Config

# Once [[https://orgmode.org/manual/Extracting-Source-Code.html][tangled]], this config will produce a ~config.py~ file with the following sections, and we'll include a docstring to remind us where the literate source is.


# [[file:qutebrowser_config.org::*qutebrowser Config][qutebrowser Config:1]]
"""
!!! DO NOT EDIT THIS FILE DIRECTLY !!!

This file was autogenerated from a literate programming file ~qutebrowser_config.org~, which should be located in the same directory
"""
import operator
import os
import platform

from qutebrowser.api import interceptor, message
from qutebrowser.config.config import ConfigContainer  # noqa: F401
from qutebrowser.config.configfiles import ConfigAPI  # noqa: F401

config = config  # type: ConfigAPI  # noqa: F821
c = c  # type: ConfigContainer  # noqa: F821

config.set('content.cookies.accept', 'all', 'chrome-devtools://*')
config.set('content.cookies.accept', 'all', 'devtools://*')
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36', 'https://*.slack.com/*')

config.set('content.images', True, 'chrome-devtools://*')
config.set('content.images', True, 'devtools://*')
config.set('content.javascript.enabled', True, 'chrome-devtools://*')
config.set('content.javascript.enabled', True, 'devtools://*')
config.set('content.javascript.enabled', True, 'chrome://*/*')
config.set('content.javascript.enabled', True, 'qute://*/*')


# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(False)


c.fonts.default_size = "18pt"
c.zoom.default = "125%"
# config.bind(',b', 'spawn --userscript qute-capture write')
config.bind(';w', 'hint links spawn  ~/.local/bin/mpv  {hint-url}')
config.bind("h", "back")
config.bind("l", "forward")
config.unbind("J")
config.unbind("K")

config.bind("J", "tab-prev")
config.bind("K", "tab-next")
config.bind(",t", "set-cmd-text -s :open -t ")
config.unbind("xo")
config.unbind("xO")

config.bind(",xo", "set-cmd-txt -s :open -b ")
config.bind(",xO", "set-cmd-txt -s :open -b -r {url:pretty}")

config.bind("x", "tab-close")
config.bind("X", "undo")

c.auto_save.session = True
# qutebrowser Config:1 ends here
